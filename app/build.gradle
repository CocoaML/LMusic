plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.devtools.ksp' version '1.7.20-1.0.8'
}

def keystorePropsFile = rootProject.file("keystore.properties")
def keystoreProps = new Properties()
keystoreProps.load((new FileInputStream(keystorePropsFile)))

android {
    compileSdkVersion 33

    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }

    defaultConfig {
        applicationId "com.lalilu.lmusic"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 38
        versionName "1.5.0"
        vectorDrawables {
            useSupportLibrary true
        }
//        ndk {
//            abiFilters "armeabi-v7a"
//        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProps['storeFile'])
            storePassword keystoreProps['storePassword']
            keyAlias keystoreProps['keyAlias']
            keyPassword keystoreProps['keyPassword']
        }
    }

    buildTypes {
        release {
            resValue "string", "app_name", "@string/app_name_release"

            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }

        debug {
            versionNameSuffix = "-DEBUG"
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "@string/app_name_debug"
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "LMusic_${variant.buildType.name}_${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
//    packagingOptions {
//        resources {
//            excludes += ['META-INF/CONTRIBUTORS.md', 'META-INF/LICENSE.md']
//        }
//    }
    lint {
        checkDependencies true
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMdd_HHmmssZ", TimeZone.getTimeZone("GMT+08:00"))
}

dependencies {
    // https://github.com/aclassen/ComposeReorderable
    // https://mvnrepository.com/artifact/org.burnoutcrew.composereorderable/reorderable
    // Apache-2.0 license
    // Compose的拖动排序组件
    implementation 'org.burnoutcrew.composereorderable:reorderable:0.9.6'
    // 0.9.2对LazyColumn的ContentPadding存在偏移的bug

    // https://github.com/Block-Network/StatusBarApiExample
    // 墨 · 状态栏歌词 API
    implementation 'com.github.577fkj:StatusBarApiExample:v2.0'

    // https://mvnrepository.com/artifact/com.airbnb.android/lottie-compose
    implementation 'com.airbnb.android:lottie-compose:5.2.0'

    // https://github.com/FunnySaltyFish/ComposeDataSaver
    // Apache-2.0 License
    implementation 'com.github.FunnySaltyFish.ComposeDataSaver:data-saver:v1.1.3'

    // https://google.github.io/accompanist
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    // https://mvnrepository.com/artifact/androidx.compose.material3/material3-window-size-class
    implementation 'androidx.compose.material3:material3-window-size-class:1.1.0-alpha02'

    implementation "androidx.compose.compiler:compiler:$compose_compiler_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.compose.ui:ui-viewbinding:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    // https://gitee.com/simplepeng/SpiderMan
    // Apache-2.0 License
    // 闪退崩溃日志捕获库
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
    // debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
    // implementation 'com.github.simplepeng.SpiderMan:spiderman:v1.1.9'

    // https://github.com/Blankj/AndroidUtilCode/
    // Apache-2.0 License
    // 安卓工具类库
    implementation 'com.blankj:utilcodex:1.31.1'

    // https://github.com/square/retrofit
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
    // Apache-2.0 License
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // https://github.com/Commit451/NativeStackBlur
    // Apache-2.0 License
    // Bitmap的Blur实现库
    implementation 'com.github.Commit451:NativeStackBlur:1.0.4'

    // https://github.com/coil-kt/coil
    // Apache-2.0 License
    // 图片加载库
    implementation "io.coil-kt:coil:$coil_version"
    implementation "io.coil-kt:coil-compose:$coil_version"

    // https://github.com/Moriafly/LyricViewX
    // GPL-3.0 License
    // 歌词组件
//    implementation 'com.github.Moriafly:LyricViewX:1.3.2'
    implementation 'com.github.cy745:LyricViewX:0b9df15cf4'

    // https://github.com/qinci/EdgeTranslucent
    // https://github.com/cy745/EdgeTranslucent
    // Undeclared License
    // 实现边沿渐变透明
    implementation 'com.github.cy745:EdgeTranslucent:8c25866a14'

    // https://mvnrepository.com/artifact/androidx.datastore/datastore-preferences
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.media:media:1.6.0'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0-rc01'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation 'androidx.dynamicanimation:dynamicanimation:1.1.0-alpha03'
    implementation "androidx.navigation:navigation-compose:$navigation_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "com.google.dagger:hilt-android:$hilt_version"

    // http://www.jthink.net/jaudiotagger/
    // https://github.com/hexise/jaudiotagger-android
    // LGPL-3.0 License
    implementation project(":jaudiotagger-android")
    implementation project(":common")
    implementation project(":ui")
    implementation project(":lmedia")

    ksp "androidx.room:room-compiler:$room_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
}